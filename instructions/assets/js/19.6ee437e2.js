(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{337:function(e,t,a){e.exports=a.p+"assets/img/resource-azure-openai.b9385411.png"},338:function(e,t,a){e.exports=a.p+"assets/img/resource-azure-openai-settings.8b57cf3f.png"},339:function(e,t,a){e.exports=a.p+"assets/img/resource-azure-openai-network.16c834ef.png"},340:function(e,t,a){e.exports=a.p+"assets/img/gpt-turbo-deployment.b06a53fd.png"},341:function(e,t,a){e.exports=a.p+"assets/img/gpt-playground.26f96025.png"},342:function(e,t,a){e.exports=a.p+"assets/img/milligram-env-vars.a7283e2c.png"},377:function(e,t,a){"use strict";a.r(t);var n=a(10),r=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"challenge-7-chat-bot"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#challenge-7-chat-bot"}},[e._v("#")]),e._v(" Challenge 7: Chat Bot")]),e._v(" "),t("p",[e._v("⏲️ "),t("em",[e._v("est. time to complete: 30 min.")]),e._v(" ⏲️")]),e._v(" "),t("h2",{attrs:{id:"here-is-what-you-will-learn-🎯"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#here-is-what-you-will-learn-🎯"}},[e._v("#")]),e._v(" Here is what you will learn 🎯")]),e._v(" "),t("p",[e._v("In this challenge you will learn how to:")]),e._v(" "),t("ul",[t("li",[e._v("Create an OpenAI service in Azure")]),e._v(" "),t("li",[e._v("Deploy an OpenAI model and connect it to your app")]),e._v(" "),t("li",[e._v("Pass the API key to your app using GitHub Secrets")]),e._v(" "),t("li",[e._v("Start chatting with model powered assistant in the app")])]),e._v(" "),t("h2",{attrs:{id:"table-of-contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[e._v("#")]),e._v(" Table Of Contents")]),e._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"#getting-started"}},[e._v("Getting Started")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#create-openai-azure-service-instance"}},[e._v("Create OpenAI Azure service instance")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#deploying-openai-large-language-model"}},[e._v("Deploying openAI Large Language Model")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#azure-openai-credentials"}},[e._v("Azure OpenAI credentials")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#run-frontend-pipeline-again"}},[e._v("Run Frontend Pipeline again")])])]),e._v(" "),t("h3",{attrs:{id:"further-informative-resources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#further-informative-resources"}},[e._v("#")]),e._v(" Further informative resources")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://learn.microsoft.com/en-us/azure/ai-services/openai/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure OpenAI Documentation"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"getting-started"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[e._v("#")]),e._v(" Getting started")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Navigate to your "),t("strong",[e._v("Resource Group")]),e._v(" we created on Day 1 during the previous challenges again")])]),e._v(" "),t("li",[t("p",[e._v("Create a new "),t("strong",[e._v("Resource")]),e._v(" and search for "),t("strong",[e._v("Azure OpenAI")])]),e._v(" "),t("p",[t("img",{attrs:{src:a(337),alt:"Screenshot of how to create a resource"}})])])]),e._v(" "),t("h2",{attrs:{id:"create-openai-azure-service-instance"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-openai-azure-service-instance"}},[e._v("#")]),e._v(" Create OpenAI Azure service instance")]),e._v(" "),t("ul",[t("li",[e._v("Select "),t("strong",[e._v("Azure OpenAI")]),e._v(" and hit "),t("strong",[e._v("Create")]),e._v(".")]),e._v(" "),t("li",[e._v("Your subscription and resource group should already be set. Select "),t("strong",[e._v("westeurope")]),e._v(" as region and "),t("strong",[e._v("Standard S0")]),e._v(".")]),e._v(" "),t("li",[e._v("Give the resource a unique name.")]),e._v(" "),t("li",[e._v("Hit "),t("strong",[e._v("Next")]),e._v(' and in network you should select "All networks, including the internet, can access this resource."')]),e._v(" "),t("li",[e._v("Hit "),t("strong",[e._v("Next")]),e._v(" twice and create the resource\n"),t("img",{attrs:{src:a(338),alt:"Screenshot of Azure Portal create page for openAI Azure"}}),e._v(" "),t("img",{attrs:{src:a(339),alt:"Screenshot of Azure Portal create page for openAI Azure, networking"}})])]),e._v(" "),t("h2",{attrs:{id:"deploying-openai-large-language-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deploying-openai-large-language-model"}},[e._v("#")]),e._v(" Deploying openAI Large Language Model")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Go to the Azure openAI resource you created and click on "),t("strong",[e._v("Model deployments")])])]),e._v(" "),t("li",[t("p",[e._v("Next, click on "),t("strong",[e._v("Create new deployment")]),e._v(" here we will choose the OpenAI model we want to deploy")])]),e._v(" "),t("li",[t("p",[e._v("Select model "),t("strong",[e._v("gpt-35-turbo")]),e._v(" and model version "),t("strong",[e._v("Auto-update to default")])])]),e._v(" "),t("li",[t("p",[e._v("Give a unique name to your deployment name then click on create")]),e._v(" "),t("p",[t("img",{attrs:{src:a(340),alt:"Screenshot of Gpt turbo model deployment"}})])])]),e._v(" "),t("p",[e._v("Congratulations! You just deployed an instance of the openAI gpt turbo model, we will later add this model to our Milligram app to build a chat bot. For now you can actually test it out inside azure and ask it a few questions. Go to the model you deployed and click on "),t("strong",[e._v("Open in Playground")]),e._v(", there you can chat with the chat assistant. You can also change the parameters of the model under "),t("strong",[e._v("Configuration > Parameters")])]),e._v(" "),t("p",[t("img",{attrs:{src:a(341),alt:"Screenshot of Gpt turbo model playground"}})]),e._v(" "),t("h2",{attrs:{id:"azure-openai-credentials"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#azure-openai-credentials"}},[e._v("#")]),e._v(" Azure OpenAI credentials")]),e._v(" "),t("p",[e._v("In order to connect our user interface with the openAI model, we need to integrate the openAI credentials in the process. For this, there are 2 options. We can add our keys in the Azure web app (Option 1) or we can automate it by adding the keys in our github workflow.")]),e._v(" "),t("h3",{attrs:{id:"option-1-add-openai-azure-credentials-to-web-app"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#option-1-add-openai-azure-credentials-to-web-app"}},[e._v("#")]),e._v(" Option 1: Add OpenAI Azure credentials to web app")]),e._v(" "),t("p",[e._v("Go back to Azure and open the Milligram web app again:")]),e._v(" "),t("ul",[t("li",[e._v("Go to "),t("strong",[e._v("environment variables")])]),e._v(" "),t("li",[e._v("Create new variable with name "),t("strong",[e._v("CHAT_API_KEY")]),e._v(" and paste Key 1")]),e._v(" "),t("li",[e._v("Create another variable with name "),t("strong",[e._v("CHAT_API_ENDPOINT")]),e._v(" and paste the endpoint url")]),e._v(" "),t("li",[e._v("Finally create another variable with name "),t("strong",[e._v("AZURE_OPENAI_MODEL_NAME")]),e._v(" And paste the name you chose when you deployed the gpt turbo model.")])]),e._v(" "),t("p",[t("img",{attrs:{src:a(342),alt:"Screenshot of Gpt turbo model playground"}})]),e._v(" "),t("h3",{attrs:{id:"option-2-integrate-openai-azure-credentials-into-github-secret"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#option-2-integrate-openai-azure-credentials-into-github-secret"}},[e._v("#")]),e._v(" Option 2: Integrate OpenAI Azure credentials into GitHub Secret")]),e._v(" "),t("p",[e._v("Similar to what we did in the challenges on Day 1 we now want to add the secret keys to Github")]),e._v(" "),t("ul",[t("li",[e._v("Go to the Azure openAI resource dashboard and click on "),t("strong",[e._v("Keys and Endpoint")])]),e._v(" "),t("li",[e._v("On Github Go to your repository, "),t("strong",[e._v("Settings > Secrets and Variables > Actions")]),e._v(" then click on "),t("strong",[e._v("create new repository secret")])]),e._v(" "),t("li",[e._v("Create new secret with name "),t("strong",[e._v("CHAT_API_KEY")]),e._v(" and paste Key 1")]),e._v(" "),t("li",[e._v("Create another secret with name "),t("strong",[e._v("CHAT_API_ENDPOINT")]),e._v(" and paste the endpoint url")]),e._v(" "),t("li",[e._v("Finally create another secret with name "),t("strong",[e._v("AZURE_OPENAI_MODEL_NAME")]),e._v(" And paste the name you chose when you deployed the gpt turbo model.")])]),e._v(" "),t("p",[e._v("Now we also want to add the secrets to our github workflow:")]),e._v(" "),t("ol",[t("li",[e._v("Add the following code snippet under "),t("code",[e._v("subscription-id")]),e._v(" around line 74 in the file located at "),t("strong",[e._v(".github/workflows/main_milligram.yml")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('      - uses: azure/appservice-settings@v1\n        with:\n          app-name: \'milligram\'\n          slot-name: \'Production\'  # Optional and needed only if the settings have to be configured on the specific deployment slot\n          app-settings-json: \'[{ "name": "CHAT_API_KEY", "value": "${{ secrets.CHAT_API_KEY }}", "slotSetting": false }, { "name": "CHAT_API_ENDPOINT", "value":  "${{ secrets.CHAT_API_ENDPOINT }}", "slotSetting": false }, { "name": "AZURE_OPENAI_MODEL_NAME", "value": "${{ secrets.AZURE_OPENAI_MODEL_NAME }}", "slotSetting": false }]\'\n        id: settings\n')])])]),t("h2",{attrs:{id:"run-frontend-pipeline-again"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run-frontend-pipeline-again"}},[e._v("#")]),e._v(" Run Frontend Pipeline again")]),e._v(" "),t("ul",[t("li",[e._v("Navigate to "),t("strong",[e._v("Actions")]),e._v(" > "),t("strong",[e._v("Pages")]),e._v(" and "),t("strong",[e._v("Run workflow")])])]),e._v(" "),t("p",[e._v("Click on the frontend link displayed under the deploy step under your pipeline "),t("code",[e._v("https://<yourgithubhandle>.github.io/...")]),e._v(" or open the app on your phone.")]),e._v(" "),t("p",[e._v("Our frontend application should now have a new button with a chat symbol that allows us to chat with our assistant. The assistant is powered by the model we deployed through the Azure OpenAI service. Have a chat with your bot 🎉")])])}),[],!1,null,null,null);t.default=r.exports}}]);